// scss-lint:disable DuplicateProperty, VendorPrefix, PropertySpelling, ImportantRule

// ============================================================================
//  Mixins
// ============================================================================

///////////////////////////////////////////////////
///////////////////////////////////////////////////
///////////////////////////////////////////////////

/// Helper to clear inner floats
/// @author Nicolas Gallagher
/// @link http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

/// Mixin helper to output vendor prefixes
/// @author Hugo Giraudel
/// @param {String} $property - Unprefixed CSS property
/// @param {*} $value - Raw CSS value
/// @param {List} $prefixes - List of prefixes to output
@mixin prefixer($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }

  #{$property}: $value;
}

/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.
/// @param {Bool} $current-selector [false] - If set to `true`, it takes the current element into consideration.
///
/// @example scss - Usage
///   .element {
///     @include selection(true) {
///       background-color: #ffbb52;
///     }
///   }
///
/// @example css - CSS Output
///   .element::-moz-selection {
///     background-color: #ffbb52;
///   }
///
///   .element::selection {
///     background-color: #ffbb52;
///   }

@mixin selection($current-selector: false) {
  @if $current-selector {
    &::-moz-selection {
      @content;
    }

    &::selection {
      @content;
    }
  } @else {
    ::-moz-selection {
      @content;
    }

    ::selection {
      @content;
    }
  }
}

/// Controls the appearance (only) of selection. This does not have any affect on actual selection operation.
/// @param {Map} $value [none] - Values: none, text, all, element
@mixin user-select($value: none) {
  @include prefixer(user-select, $value, webkit moz ms spec);
}



@mixin font-size($font-size) {
  font-size: $font-size;
  font-size: ($font-size / 16px) * 1rem;
}
